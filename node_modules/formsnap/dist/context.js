import { getContext, hasContext, setContext } from 'svelte';
const FORM_FIELD = Symbol('FORM_FIELD_CTX');
/**
 * @private
 */
export function setFormField(props) {
    setContext(FORM_FIELD, props);
    return props;
}
/**
 * Gets context for the closest form field in the component tree.
 * Use this function for more advanced component composition.
 *
 * @category Field
 * @category ElementField
 * @category Fieldset
 * @see {@link https://formsnap.dev/docs/functions/get-form-field getFormField Documentation}
 */
export function getFormField() {
    if (!hasContext(FORM_FIELD)) {
        ctxError('Form.Field');
    }
    return getContext(FORM_FIELD);
}
const FORM_CONTROL = Symbol('FORM_CONTROL_CTX');
/**
 * @private
 */
export function setFormControl(props) {
    setContext(FORM_CONTROL, props);
    return props;
}
/**
 * Gets context for the closest form item in the component tree.
 *
 * @category Control
 * @see {@link https://formsnap.dev/docs/functions/get-form-control getFormControl Documentation}
 */
export function getFormControl() {
    if (!hasContext(FORM_CONTROL)) {
        ctxError('<Control />');
    }
    return getContext(FORM_CONTROL);
}
function ctxError(ctx) {
    console.error(`Unable to find \`${ctx}\` context. Did you forget to wrap the component in a \`${ctx}\`?`);
}
