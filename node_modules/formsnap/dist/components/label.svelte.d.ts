import { SvelteComponent } from "svelte";
import type { LabelProps } from './types.js';
declare const __propDef: {
    props: LabelProps;
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            labelAttrs: {
                [x: string]: any;
                for: string;
                'data-fs-error': string | undefined;
                'data-fs-label': string;
            };
        };
    };
};
type LabelProps_ = typeof __propDef.props;
export { LabelProps_ as LabelProps };
export type LabelEvents = typeof __propDef.events;
export type LabelSlots = typeof __propDef.slots;
/**
 * ## Label
 * A component that renders a label element associated with a form control, and must be used within a [Control](https://formsnap.dev/docs/components/control) component.
 *
 * - [Label Documentation](https://formsnap.dev/docs/components/label)
 *
 * @example
 * ```svelte
 * <Control let:attrs>
 * <Label>First Name</Label>
 * <input type="text" name="first_name" {...attrs} bind:value={$formData.first_name} />
 * </Control>
 * ```
 *
 * ### Slot Props
 * - `labelAttrs` - A spreadable object of attributes for the label element if `asChild` is `true`.
 *
 * @param {boolean} [asChild=false] - Whether to opt out of rendering the label element. [[asChild Docs](https://formsnap.dev/docs/composition/aschild)]
 */
export default class Label extends SvelteComponent<LabelProps_, LabelEvents, LabelSlots> {
}
