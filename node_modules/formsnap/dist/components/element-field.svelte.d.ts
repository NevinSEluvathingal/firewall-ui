import { SvelteComponent } from "svelte";
import type { FormPathLeaves } from 'sveltekit-superforms';
import type { ElementFieldProps } from './types.js';
import type { PrimitiveFromIndex } from '../internal/types.js';
declare class __sveltets_Render<T extends Record<string, unknown>, U extends FormPathLeaves<T>> {
    props(): ElementFieldProps<T, U>;
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {
            value: PrimitiveFromIndex<T, U>;
            errors: string[];
            tainted: boolean;
            constraints: Partial<{ [Property in keyof T]: T extends any ? NonNullable<T[Property]> extends Record<string, unknown> ? Partial<NonNullable<T[Property]> extends infer T_1 extends Record<string, unknown> ? { [Property_1 in keyof T_1]: NonNullable<T[Property]> extends infer T_2 ? T_2 extends NonNullable<T[Property]> ? T_2 extends any ? NonNullable<T_2[Property_1]> extends Record<string, unknown> ? Partial<NonNullable<T_2[Property_1]> extends infer T_3 extends Record<string, unknown> ? { [Property_2 in keyof T_3]: NonNullable<T_2[Property_1]> extends infer T_4 ? T_4 extends NonNullable<T_2[Property_1]> ? T_4 extends any ? NonNullable<T_4[Property_2]> extends Record<string, unknown> ? Partial<NonNullable<T_4[Property_2]> extends infer T_5 extends Record<string, unknown> ? { [Property_3 in keyof T_5]: NonNullable<T_4[Property_2]> extends infer T_6 ? T_6 extends NonNullable<T_4[Property_2]> ? T_6 extends any ? NonNullable<T_6[Property_3]> extends Record<string, unknown> ? Partial<NonNullable<T_6[Property_3]> extends infer T_7 extends Record<string, unknown> ? { [Property_4 in keyof T_7]: NonNullable<T_6[Property_3]> extends infer T_8 ? T_8 extends NonNullable<T_6[Property_3]> ? T_8 extends any ? NonNullable<T_8[Property_4]> extends Record<string, unknown> ? Partial<NonNullable<T_8[Property_4]> extends infer T_9 extends Record<string, unknown> ? { [Property_5 in keyof T_9]: NonNullable<T_8[Property_4]> extends infer T_10 ? T_10 extends NonNullable<T_8[Property_4]> ? T_10 extends any ? NonNullable<T_10[Property_5]> extends Record<string, unknown> ? Partial<NonNullable<T_10[Property_5]> extends infer T_11 extends Record<string, unknown> ? { [Property_6 in keyof T_11]: NonNullable<T_10[Property_5]> extends infer T_12 ? T_12 extends NonNullable<T_10[Property_5]> ? T_12 extends any ? NonNullable<T_12[Property_6]> extends Record<string, unknown> ? Partial<NonNullable<T_12[Property_6]> extends infer T_13 extends Record<string, unknown> ? { [Property_7 in keyof T_13]: NonNullable<T_12[Property_6]> extends infer T_14 ? T_14 extends NonNullable<T_12[Property_6]> ? T_14 extends any ? NonNullable<T_14[Property_7]> extends Record<string, unknown> ? Partial<NonNullable<T_14[Property_7]> extends infer T_15 extends Record<string, unknown> ? { [Property_8 in keyof T_15]: NonNullable<T_14[Property_7]> extends infer T_16 ? T_16 extends NonNullable<T_14[Property_7]> ? T_16 extends any ? NonNullable<T_16[Property_8]> extends Record<string, unknown> ? Partial<NonNullable<T_16[Property_8]> extends infer T_17 extends Record<string, unknown> ? { [Property_9 in keyof T_17]: NonNullable<T_16[Property_8]> extends infer T_18 ? T_18 extends NonNullable<T_16[Property_8]> ? T_18 extends any ? NonNullable<T_18[Property_9]> extends Record<string, unknown> ? Partial<NonNullable<T_18[Property_9]> extends infer T_19 extends Record<string, unknown> ? { [Property_10 in keyof T_19]: NonNullable<T_18[Property_9]> extends infer T_20 ? T_20 extends NonNullable<T_18[Property_9]> ? T_20 extends any ? NonNullable<T_20[Property_10]> extends Record<string, unknown> ? Partial<any> : NonNullable<T_20[Property_10]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_18[Property_9]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_16[Property_8]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_14[Property_7]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_12[Property_6]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_10[Property_5]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_8[Property_4]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_6[Property_3]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_4[Property_2]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T_2[Property_1]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never : never : never; } : never> : NonNullable<T[Property]> extends (infer A)[] ? NonNullable<A> extends Record<string, unknown> ? Partial<any> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : Partial<{
                pattern: string;
                min: string | number;
                max: string | number;
                required: boolean;
                step: number | "any";
                minlength: number;
                maxlength: number;
            }> : never; }>[U];
        };
    };
}
export type ElementFieldProps_<T extends Record<string, unknown>, U extends FormPathLeaves<T>> = ReturnType<__sveltets_Render<T, U>['props']>;
export type ElementFieldEvents<T extends Record<string, unknown>, U extends FormPathLeaves<T>> = ReturnType<__sveltets_Render<T, U>['events']>;
export type ElementFieldSlots<T extends Record<string, unknown>, U extends FormPathLeaves<T>> = ReturnType<__sveltets_Render<T, U>['slots']>;
/**
 * ## ElementField
 * A component that provides the necessary context for a form field that represents a single element in an array.
 *
 * - [ElementField Documentation](https://formsnap.dev/docs/components/element-field)
 *
 * ### Slot Props
 * - `value` - The value of the field.
 * - `errors` - The errors of the field.
 * - `tainted` - The tainted state of the field.
 * - `constraints` - The constraints of the field.
 *
 * @param {SuperForm} form - The form object.
 * @param {FormPathLeaves<T>} name - The name and index of the field. For example, `urls[0]`.
 */
export default class ElementField<T extends Record<string, unknown>, U extends FormPathLeaves<T>> extends SvelteComponent<ElementFieldProps_<T, U>, ElementFieldEvents<T, U>, ElementFieldSlots<T, U>> {
}
export {};
