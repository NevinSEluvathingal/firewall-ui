import { SvelteComponent } from "svelte";
import type { ControlProps } from './types.js';
declare const __propDef: {
    props: ControlProps;
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            attrs: {
                name: string;
                id: string;
                'data-fs-error': string | undefined;
                'aria-describedby': string | undefined;
                'aria-invalid': "true" | undefined;
                'aria-required': "true" | undefined;
                'data-fs-control': string;
            };
        };
    };
};
type ControlProps_ = typeof __propDef.props;
export { ControlProps_ as ControlProps };
export type ControlEvents = typeof __propDef.events;
export type ControlSlots = typeof __propDef.slots;
/**
 * ## Control
 * Associates a [Label](https://formsnap.dev/docs/components/label) with and provides necessary attributes for a form control.
 *
 * - [Control Documentation](https://formsnap.dev/docs/components/label)
 *
 * @example
 * ```svelte
 * <Control let:attrs>
 * <Label>Name</Label>
 * <input type="text" {...attrs} bind:value={$formData.name} />
 * </Control>
 * ```
 *
 * ### Slot Props
 * - `attrs` - A spreadable object of attributes that must be applied to the form control element.
 */
export default class Control extends SvelteComponent<ControlProps_, ControlEvents, ControlSlots> {
}
